# this is the first version
This project is to turn a Rasberry PI as an audio device. The device is able to do 2 functions:
as a sound collector and as a test-tone generator.

Table of content
	1. Configaration Instruction
	2. Installation Instruction
	3. Operating Inruction
	4. File list (Manifest)
	5. Copyright / Copyleft
	6. Contact Information
	7. Credits and Acknowledgements

1. Configuration instructions

- Raspberry PI 3 Mode B
- USB sound card with microphone
- RJ45 straight-through cable
- SD card
- USB cable
- Internet connection

2. Installation instructions

2.1 Insert SD card to Raspberry PI 3 
2.2 Connect RJ45 cable from Raspberry to internet.
2.3 Initialize Raspberry. 
2.4 Connect sound card to Raspberry.
2.5 Connect microphone to sound card. 
2.6 Connect USB cable from Raspberry to 5V power supply (PC or laptop). 
    Make sure that you could receive IP address via email.

3. Operating instructions

3.1 Open Putty, enter IP address that you received via email into Putty. 
3.2 Enter username and password. 
3.3 Go to file document of this application by using command "cd appdev". 
3.4 Make file to compile the application by using command "make".
3.5 List all the file by using command "ls" to see file "sound.out". 
3.6 To run this application, use command "./sound.out", 
    and you would see the bar which is illustrated for the sound. 
    If the sound is higher than 70dB than the systerm will record as a peak.
3.7 Speak to the micrphone to record the sound. 
3.8 Use command "./sound.out 440" and select channels and duration 
    to generate testTone.wav
3.9 Use command "aplay testTone.wav" to hear the record.

4. File manifest
	a. main.c
	This is the main, the operating file
	b. sound.c
	This is the file for extracting the information contended in a .wav file and calculation for dB
	c. sound.h
	This is the header file for sound.c. This file content the library, definition for constants
	d. screen.c
	This file is for displaying RMS values into bars on the screen.
	e. screen.h
	This is the header file for screen.c
	f. comm.c
	This file is the communication between the Raspberry Pi and the server which it sent RMS values to
	g. comm.h
	This is the header file for comm.c
	h. makefile
	This file contains the way of compilling and other menthods such as clean files or make .tar file
	i. comm.c
	This file is to send an receive the signal
	j. sound.php
	This file is kept in the server so that the server can receive the RMS values

	All of the source files can be download at: https://github.com/nguyenlong0920/Application-Development-2019

5. Copyright and license

Thanks for curl post menthod! The information can be found at: https://curl.haxx.se

All the sources are free to use and distribute!

6. Contact information

NGUYEN HOANG LONG
Dept. of Information Technology
Vaasa University of Applied Sciences
Woffintie 30, 65100, Vaasa, Finland
Home: http://www.cc.puv.fi/~e1800946
email: e1800946@edu.vamk.fi

7. Credits and Acknowledge

I want to say Thank you to my teacher Gao Chao who teach me this Application Developement cource.
He has guilded me step by step and help me to correct all of my mistakes.
Also he explained the lessons very details so that I can understand easily.
